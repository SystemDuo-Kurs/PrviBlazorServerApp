@page "/nasa"
@using Data
@using PrviBlazorServerApp.Data.Models
@using Microsoft.AspNetCore.SignalR.Client
@inject Data.ViewModels.PersonList PersonListVM
@inject Data.ViewModels.PersonEdit PersonEditVM
@inject Data.Services.SignalR SignalRserv

<h3>Nasa</h3>

<MudTable Items="PersonListVM.People">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Surname</MudTh>
        <MudTh>Delete</MudTh>
        <MudTh>Update</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Surname</MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Rounded.DeleteForever" @onclick="()=>Delete(context)"/>
        </MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Rounded.Edit" @onclick="()=>PersonEditVM.Person = context" />
        </MudTd>
    </RowTemplate>
</MudTable>

<MudForm Model=PersonEditVM.Person>
    <MudTextField T="string" Label="Name" @bind-Value=PersonEditVM.Person.Name/>
    <MudTextField T="string" Label="Surname" @bind-Value=PersonEditVM.Person.Surname/>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick=SaveAsync>Snimi</MudButton>
</MudForm> 


@code 
{
    protected override async Task OnInitializedAsync()
    {
        SignalRserv.HC.On("bilaPromena",async () =>
            {
                PersonListVM.GetAll();
                await base.InvokeAsync(() => StateHasChanged());
            });
    }
    public async Task Delete(Person person)
    {
        await PersonListVM.Delete(person);
        Refresh();
    }
    public async Task SaveAsync()
    {
        await PersonEditVM.SaveAsync();
        Refresh();
    }
    private void Refresh()
    {
        PersonListVM.GetAll();
        StateHasChanged();
    }
}
